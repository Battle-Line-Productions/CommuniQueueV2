name: .NET CI

on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_ORG: battle-line-productions
      SONAR_HOST_URL: https://sonarcloud.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install frontend dependencies
        run: npm ci

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install SonarScanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.*
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Begin Sonar analysis
        run: |
          dotnet-sonarscanner begin \
            /k:"Battle-Line-Productions_CommuniQueueV2" \
            /o:"${{ env.SONAR_ORG }}" \
            /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ env.SONAR_TOKEN }}"

      - name: Restore dependencies
        run: dotnet restore CommuniQueueV2.sln

      - name: Build solution
        run: dotnet build CommuniQueueV2.sln --configuration Release --no-restore

      - name: Run unit tests
        run: |
          dotnet test CommuniQueueV2.Tests/CommuniQueueV2.Tests.csproj \
            --configuration Release \
            --no-build \
            --filter "FullyQualifiedName!~WebTests" \
            --verbosity normal

      - name: End Sonar analysis
        run: dotnet-sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"
